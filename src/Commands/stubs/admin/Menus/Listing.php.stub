<?php
namespace Modules\DumpMyModuleName\Http\Livewire\Menus;
use Hungnm28\LaravelForm\Traits\WithLaravelFormTrait;
use Illuminate\Support\Arr;
use Illuminate\Support\Facades\Artisan;
use Livewire\Component;
use Nwidart\Modules\Facades\Module;

class Listing extends Component
{
    use WithLaravelFormTrait;

    public $create, $module ;
    public $edit;
    protected $queryString = ["create","edit","module"];
    public function mount(){
        $this->authorize("DumpMyRouteName.menus");
        if(!$this->module){
            $this->module = "DumpMyModuleLowerName";
        }
    }

    public function delete($record){
        $this->onlyLocalhost();
        $module = Module::findOrFail($this->module);
        $data = config($module->getLowerName().".menu",[]);
        Arr::forget($data,$record);
        $this->saveNavbar($module->getLowerName(),$data);
        session()->flash('message','done');
        $this->redirect(route("DumpMyRouteName.menus",["module"=>$this->module]));
    }

    public function render(){
        $module = Module::findOrFail($this->module);
        $data = config($module->getLowerName().".menu",[]);

        lForm()->setTitle("Menu");
        lForm()->pushBreadCrumb(route("DumpMyRouteName"),"Admin");
        lForm()->pushBreadCrumb(route("DumpMyRouteName.menus"),"Menu");

        $modules = [];
        foreach(Module::allEnabled() as $item){
            $modules[$item->getLowerName()] = $item->getStudlyName();
        }
        return view("DumpMyModuleView::livewire.menus.listing",compact("data", "modules"))
            ->layout('DumpMyModuleView::layouts.master', ['title' => 'Menu']);
    }
}
