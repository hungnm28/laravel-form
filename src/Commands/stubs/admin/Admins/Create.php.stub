<?php

namespace Modules\DumpMyModuleName\Http\Livewire\Admins;

use App\Models\Role;
use App\Models\User;
use Hungnm28\LaravelForm\Traits\WithLaravelFormTrait;
use Livewire\Component;

class   Create extends Component
{
    use WithLaravelFormTrait;

    public $user_id,$email, $is_admin, $is_super_admin, $roles = [];
    protected $rules = [
        'user_id' => 'integer|required'
        ,'email' => 'email|required'

    ];

    public function mount()
    {
        $this->authorize("DumpMyRouteName.admins.create");
        $this->done = 1;
    }

    public function updated($field)
    {
        $this->validateOnly($field);
    }

    public function updatedUserId(){
        $data = User::whereIsAdmin(0)->find($this->user_id);
        if($data){
            $this->email = $data->email;
        }else{
            $this->email = null;
        }
    }
    public function updatedEmail(){
        $data = User::whereIsAdmin(0)->whereEmail($this->email)->first();
        if($data){
            $this->user_id = $data->id;
        }else{
            $this->user_id = 0;
        }
    }

    public function updatedIsAdmin(){
        if(!$this->is_admin){
            $this->is_super_admin = false;
            $this->roles = [];
        }
    }

    public function updatedIsSuperAdmin(){
        if($this->is_super_admin){
            $this->is_admin = true;
            $this->roles = [];
        }
    }

    public function store()
    {
        $this->authorize("DumpMyRouteName.admins.create");
        $this->validate();
        $data = User::whereIsAdmin(0)->findOrFail($this->user_id);
        $data->update([
           "is_admin"=>$this->is_admin
           ,"is_super_admin"=>$this->is_super_admin
        ]);
        $data->roles()->detach();
        $data->roles()->attach($this->roles);
        $this->redirectForm("DumpMyRouteName.admins", $data->id);
    }

    public function render()
    {
        lForm()->setTitle("Admins Create");
        lForm()->pushBreadcrumb(route("DumpMyRouteName"),"Admin");
		lForm()->pushBreadcrumb(route("DumpMyRouteName.admins"),"Admins");
		lForm()->pushBreadcrumb(route("DumpMyRouteName.admins.create"),"Create");

        $data = User::whereIsAdmin(0)->find($this->user_id);
        $allRoles = Role::all()->pluck("label","id");
        return view("DumpMyModuleView::livewire.admins.create",compact("data","allRoles"))
            ->layout('DumpMyModuleView::layouts.master');
    }
}
